knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("Teams.csv")
teams <- read.csv("Teams.csv")
teams
teams <- read.csv("Teams.csv")
teams[yearID == 2000]
teams <- read.csv("Teams.csv")
teams[teams$yearID == 2000]
teams <- read.csv("Teams.csv")
teams[teams$yearID == "2000"]
teams <- read.csv("Teams.csv")
teams
teams[teams$yearID == "2000"]
teams <- read.csv("Teams.csv")
teams
teams[teams$yearID == 1871]
teams <- read.csv("Teams.csv")
teams
teams[teams$yearID == 2000]
teams <- read.csv("Teams.csv")
teams
teams[teams$yearID == 1871]
hrs <- teams[teams$HR >= 200]
hrs <- teams[teams$HR == 200]
knitr::opts_chunk$set(echo = TRUE)
NCbirths <- read.csv("births.csv")
NCbirths <- read.csv("births.csv")
NCbirths
weight <- NCbirths$weight
weight
weight <- NCbirths$weight
weights_in_pounds <- weight/0.0625
weights_in_pounds <- weight/0.0625
weights_in_pounds
weights_in_pounds <- weight*0.0625
weights_in_pounds
weights_in_pounds <- weight*0.0625
weights_in_pounds[1:20]
mean(weights_in_pounds)
NCbirths <- read.csv("births.csv")
?table
NCbirths
NCbirths[NCbirths$Habit == "Smoker"]
NCbirths[NCbirths["Habit"] == "Smoker"]
as.table(NCbirths[NCbirths["Habit"] == "Smoker"])
table(NCbirths[NCbirths["Habit"] == "Smoker"])
NCbirths[NCbirths["Habit"] == "Smoker"]
NCbirths[NCbirths$Habit == "Smoker",]
sum(NCbirths[NCbirths$Habit == "Smoker",])
NCbirths[NCbirths$Habit == "Smoker",]
NCbirths[NCbirths$Habit == "Smoker",]
length(NCbirths["Habit"])
NCbirths[NCbirths$Habit == "Smoker",]
length(NCbirths)
smokers <- NCbirths[NCbirths$Habit == "Smoker",]
dim(smokers)
smokers <- NCbirths[NCbirths$Habit == "Smoker",]
dim(smokers)
dim(NCbirths)
smokers <- dim(NCbirths[NCbirths$Habit == "Smoker",])[0]
total <- dim(NCbirths)[1]
smokers/total
smokers <- dim(NCbirths[NCbirths$Habit == "Smoker",])[0]
total <- dim(NCbirths)[1]
smokers
total
smokers/total
smokers <- dim(NCbirths[NCbirths$Habit == "Smoker",])[1]
total <- dim(NCbirths)[1]
smokers
total
smokers/total
smokers <- dim(NCbirths[NCbirths$Habit == "Smoker",])[1]
total <- dim(NCbirths)[1]
smokers/total
flint <- read.csv("flint.csv")
flint <- read.csv("flint.csv")
flint
flint[flint$Pb >= 15,]
high_lead <- dim(flint[flint$Pb >= 15,])[1]
total <- dim(flint)[1]
high_lead <- dim(flint[flint$Pb >= 15,])[1]
total <- dim(flint)[1]
total
high_lead
high_lead <- dim(flint[flint$Pb >= 15,])[1]
total <- dim(flint)[1]
high_lead/total
north <- flint[flint$Region == "North",]
north <- flint[flint$Region == "North",]
mean(north$Cu)
north <- flint[flint$Region == "North",]
mean(north$Cu)
high_lead <- flint[flint$Pb >= 15,]
total <- dim(flint)[1]
(dim(high_lead)[1])/total
north <- flint[flint$Region == "North",]
mean(north$Cu)
mean(high_lead$Cu)
mean(flint$Pb)
mean(flint$Cu)
?boxplot
boxplot(flint$Pb)
boxplot(flint$Pb, title = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)')
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)')
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)', range = (0, 150))
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)', range = 150)
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)', range = 100)
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)', range = 10)
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)', range = 5)
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)', range = 2)
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)', range = 1)
boxplot(flint$Pb, main = 'Water Pollution Lead Levels in Flint, Michigan (in PPB)')
seed(2022)
random.seed(2022)
set.seed(2022)
set.seed(2022)
hist(NCbirths$weight)
?sample
sample(NCbirths$weight, size = 10)
weights_sample <- sample(NCbirths$weight, size = 10)
weights_sample
mean(weights_sample)
weight_means <- c()
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
append(weight_means, mean(weights_sample))
}
weight_means <- c()
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
append(weight_means, mean(weights_sample))
}
weight_means
?append
weight_means <- c()
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
mean(weights_sample)
append(weight_means, mean(weights_sample))
}
weight_means
weight_means <- c()
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
print(mean(weights_sample))
append(weight_means, mean(weights_sample))
}
weight_means
weight_means <- c()
weight_means
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
#print(mean(weights_sample))
append(weight_means, mean(weights_sample))
}
weight_means
?vector
weight_means <- vector()
weight_means
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
#print(mean(weights_sample))
append(weight_means, mean(weights_sample))
}
weight_means
weight_means <- vector(length = 0)
weight_means
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
#print(mean(weights_sample))
append(weight_means, mean(weights_sample))
}
weight_means
weight_means <- vector(mode = "logical", length = 0)
weight_means
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
#print(mean(weights_sample))
append(weight_means, mean(weights_sample))
}
weight_means
?append
weight_means <- vector(mode = "logical", length = 0)
weight_means
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
#print(mean(weights_sample))
weight_means.append(mean(weights_sample))
}
weight_means <- vector(mode = "logical", length = 0)
weight_means
for (x in range(1:1000)) {
weights_sample <- sample(NCbirths$weight, size = 10)
#print(mean(weights_sample))
append(weight_means, mean(weights_sample))
}
weight_means
weight_means <- c()
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
#print(mean(weights_sample))
weight_means <- c(weight_means, mean(weights_sample))
}
weight_means
weight_means <- c()
for (x in 1:1000) {
weights_sample <- sample(NCbirths$weight, size = 10)
weight_means <- c(weight_means, mean(weights_sample))
}
hist(weight_means)
